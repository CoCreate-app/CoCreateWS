apiVersion: v1
kind: Service
metadata:
  labels:
    app: cocreatews
  name: cocreatews
  namespace: default
spec:
  ports:
  - name: app
    port: 8081
    protocol: TCP
    targetPort: 8081
  selector:
    app: cocreatews
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app: cocreatews
  name: cocreatews
  namespace: default
spec:
  selector:
    matchLabels:
      app: cocreatews
  template:
    metadata:
      labels:
        app: cocreatews
    spec:
      containers:
      - image: docker.pkg.github.com/cocreate-app/cocreatews/cocreatews:v0.0.1
        imagePullPolicy: Always
        name: cocreatews
        ports:
        - containerPort: 8081
          name: app
          protocol: TCP
      imagePullSecrets:
      - name: github
      nodeSelector:
        nodeType: application
      restartPolicy: Always
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/session-cookie-hash: sha1
  labels:
    app: cocreatews
  name: cocreatews
  namespace: default
spec:
  rules:
  - host: '*.cocreate.app'
    http:
      paths:
      - backend:
          serviceName: cocreate
          servicePort: 8081
        path: /
  tls:
  - hosts:
    - '*.cocreate.app'
    secretName: cocreate-app
